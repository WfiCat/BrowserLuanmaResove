package cn.hbeu.web.servlet;

import sun.misc.BASE64Encoder;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URLEncoder;

public class downloadServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        doPost(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        // 1.获取名字
        String name = req.getParameter("name");
        System.out.println("name:"+name);

        // 2.获取资源

        // getResourceAsStream---相对路经（classes文件夹）
        //InputStream iss = downloadServlet.class.getClassLoader().getResourceAsStream("cn/hbeu/web/servlet/downloadServlet.class");
        // getRealPath(相对路径，相对于当前部署好的web应用)
        String path = this.getServletContext().getRealPath("resource/" + name);
        FileInputStream is = new FileInputStream(new File(path));

//        System.out.println(is);
        // 3.响应
        // 3.1 告诉浏览器不要解析直接下载

        // 不同的浏览器使用的编码格式不同
        // 写入response 缓冲区使用的编码


        //resp.setCharacterEncoding("utf-8");
        // 告诉客户端使用何种码表解析
        resp.setHeader("Content-Type","text/html;charset=UTF-8");


        //获得请求头中的User-Agent
        String agent = req.getHeader("User-Agent");
        //根据不同浏览器进行不同的编码
        String filenameEncoder = "";
        if (agent.contains("MSIE")) {
            // IE浏览器
            filenameEncoder = URLEncoder.encode(name, "utf-8");
            filenameEncoder = filenameEncoder.replace("+", " ");
        } else if (agent.contains("Firefox")) {
            // 火狐浏览器
            BASE64Encoder base64Encoder = new BASE64Encoder();
            filenameEncoder = "=?utf-8?B?"
                    + base64Encoder.encode(name.getBytes("utf-8")) + "?=";
        } else {
            // 其它浏览器
            filenameEncoder = URLEncoder.encode(name, "utf-8");
        }



        // 客户端通过MIME类型来区分类型
        resp.setContentType(this.getServletContext().getMimeType(name));
        // 客户端会默认的对filename进行解码
        resp.setHeader("Content-Disposition","attachment;filename="+filenameEncoder);

        ServletOutputStream os = resp.getOutputStream();

        int len = 0;
        byte[] buffer = new byte[1024];
        while ((len = is.read(buffer))>0) {
            os.write(buffer,0,len);
        }

        // 同过响应获取的输出流 不用关闭，web容器会自动帮我们关闭
        is.close();

        System.out.println(name);


    }
}
